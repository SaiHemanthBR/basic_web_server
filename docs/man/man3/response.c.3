.TH "slib/response.c" 3 "Mon Jul 26 2021" "Version 2.0" "nanows" \" -*- nroff -*-
.ad l
.nh
.SH NAME
slib/response.c \- Functions for creating, sending and handling network responses\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'response\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBresponse\fP * \fBcreate_response\fP (const int conn_fd)"
.br
.ti -1c
.RI "\fBresponse\fP * \fBcreate_response_from_request\fP (const \fBrequest\fP *req)"
.br
.ti -1c
.RI "const char * \fBget_response_header\fP (const \fBresponse\fP *res, const char *header_key, char *header_val)"
.br
.ti -1c
.RI "const char * \fBset_response_header\fP (const \fBresponse\fP *res, const char *header_key, const char *header_val)"
.br
.ti -1c
.RI "ssize_t \fBsend_response_header\fP (const \fBresponse\fP *res)"
.br
.ti -1c
.RI "ssize_t \fBsend_response_file\fP (const \fBresponse\fP *res, FILE *file)"
.br
.ti -1c
.RI "ssize_t \fBsend_response\fP (const \fBresponse\fP *res, const char *buf, ssize_t buf_size)"
.br
.ti -1c
.RI "void \fBclose_response\fP (\fBresponse\fP *res)"
.br
.ti -1c
.RI "\fBresponse\fP * \fB_initialize_response\fP ()"
.br
.ti -1c
.RI "void \fB_free_response\fP (\fBresponse\fP *res)"
.br
.ti -1c
.RI "void \fB_res_header_htab_key_destroy\fP (gpointer data)"
.br
.ti -1c
.RI "void \fB_res_header_htab_value_destroy\fP (gpointer data)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Functions for creating, sending and handling network responses\&. 

Implements functions defined in \fC\fBinclude/response\&.h\fP\fP\&. Used to create, send and handle network responses\&.
.PP
The structure of response is defined by \fCstruct response\fP (defined in \fC\fBinclude/response\&.h\fP\fP)\&. This struct contains the following fields: http method, status code, response headers and connection file descriptor\&. \fCstruct response\fP is used to send the response back to the client and can be created by manually calling \fC\fBcreate_response()\fP\fP function and setting the values or automatically from a request\&.
.PP
Max size of a response header when formatted as '<key>: <value>\\r\\n' is defined by \fCRES_HEADER_BUF_SIZE\fP macro (defined in \fC\fBinclude/response\&.h\fP\fP)\&. This value can be changed by defining \fCRES_HEADER_BUF_SIZE\fP before \fC#include 'response\&.h'\fP\&.
.PP
\fBSee also\fP
.RS 4
typedef struct \fBrequest\fP 
.PP
typedef struct \fBresponse\fP 
.RE
.PP
\fBAuthor\fP
.RS 4
Sai Hemanth Bheemreddy (@SaiHemanthBR) 
.RE
.PP
\fBCopyright\fP
.RS 4
MIT License; Copyright (c) 2021 Sai Hemanth Bheemreddy 
.RE
.PP
\fBBug\fP
.RS 4
No known bugs\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void _free_response (\fBresponse\fP * res)"

.SS "\fBresponse\fP* _initialize_response ()"

.SS "void _res_header_htab_key_destroy (gpointer data)"

.SS "void _res_header_htab_value_destroy (gpointer data)"

.SS "void close_response (\fBresponse\fP * res)"

.SS "\fBresponse\fP* create_response (const int conn_fd)"

.SS "\fBresponse\fP* create_response_from_request (const \fBrequest\fP * req)"

.SS "const char* get_response_header (const \fBresponse\fP * res, const char * header_key, char * header_val)"

.SS "ssize_t send_response (const \fBresponse\fP * res, const char * buf, ssize_t buf_size)"

.SS "ssize_t send_response_file (const \fBresponse\fP * res, FILE * file)"

.SS "ssize_t send_response_header (const \fBresponse\fP * res)"

.SS "const char* set_response_header (const \fBresponse\fP * res, const char * header_key, const char * header_val)"

.SH "Author"
.PP 
Generated automatically by Doxygen for nanows from the source code\&.
